geom_line() +
theme_bw()+
geom_hline(data = BioLim, aes(yintercept = bio20), linetype = "dotdash", color = "red")+
geom_hline(data = BioLim, aes(yintercept = bio40), linetype = "dashed", color = "green")+
geom_hline(data = BioLim, aes(yintercept = bio48), linetype = "dotted", color = "blue")+
theme(text = element_text(size=18),
axis.title.y = element_text(vjust=0.4, size = 16),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_wrap(~Species,
labeller = labeller(Species = spNames))
colnames(BioLim)<-c("Species", "bioLevel","bio20","bio40","bio48")
BioLim <-BioLim %>%
mutate(bio20 = ifelse(Species %in% c("trachurus declivis","nototodarus gouldi","helicolenus barathri"), NA, bio20),
bio40 = ifelse(Species %in% c("trachurus declivis","nototodarus gouldi","helicolenus barathri"), NA, bio40),
bio48 = ifelse(Species %in% c("trachurus declivis","nototodarus gouldi","helicolenus barathri"), NA, bio48))
names(spNames) <- unique(BioData$Species)
spNames <- unique(BioData$Species)
x_label <- "Year"
y_label <- "Biomass [g]"
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", # breaks = log_breaks(n = 3)
labels = prettyNum, name = y_label) +
scale_x_continuous(name = x_label) +
geom_line() +
theme_bw()+
geom_hline(data = BioLim, aes(yintercept = bio20), linetype = "dotdash", color = "red")+
geom_hline(data = BioLim, aes(yintercept = bio40), linetype = "dashed", color = "green")+
geom_hline(data = BioLim, aes(yintercept = bio48), linetype = "dotted", color = "blue")+
theme(text = element_text(size=18),
axis.title.y = element_text(vjust=0.4, size = 16),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_wrap(~Species,
labeller = labeller(Species = spNames))
p
BioLim
BioData<-plotBiomass(temp_sim)$BioData
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet and time
spNames <- unique(BioData$Species)
temp_sim@BioLimits[[4]]$SED
temp_sim = sim_scenario[[1]] # to fix....
BioData<-plotBiomass(temp_sim)$BioData
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet and time
BioLim
spNames <- unique(BioData$Species)
x_label <- "Year"
y_label <- "Biomass [g]"
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", # breaks = log_breaks(n = 3)
labels = prettyNum, name = y_label) +
scale_x_continuous(name = x_label) +
geom_line() +
theme_bw()+
geom_hline(data = BioLim, aes(yintercept = bio20), linetype = "dotdash", color = "red")+
geom_hline(data = BioLim, aes(yintercept = bio40), linetype = "dashed", color = "green")+
geom_hline(data = BioLim, aes(yintercept = bio48), linetype = "dotted", color = "blue")+
theme(text = element_text(size=18),
axis.title.y = element_text(vjust=0.4, size = 16),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_wrap(~Species,
labeller = labeller(Species = spNames))
p
prettyNum
# # trial
sim = sim_scenario$noCompetition
species = dimnames(sim@n)$sp[!is.na(sim@params@A)]
start_time = as.numeric(dimnames(sim@n)[[1]][1])
end_time = as.numeric(dimnames(sim@n)[[1]][dim(sim@n)[1]])
y_ticks = 6
print_it = TRUE
ylim = c(NA, NA)
total = FALSE
background = TRUE
b <- getBiomass(sim, ...)
if (start_time >= end_time) {
stop("start_time must be less than end_time")
}
b <- b[(as.numeric(dimnames(b)[[1]]) >= start_time) &
(as.numeric(dimnames(b)[[1]]) <= end_time), , drop = FALSE]
b_total <- rowSums(b)
if (total) {
b <- cbind(b, Total = b_total)
species <- c("Total", species)
}
sim = sim_scenario$noCompetition
species = dimnames(sim@n)$sp[!is.na(sim@params@A)]
start_time = as.numeric(dimnames(sim@n)[[1]][1])
end_time = as.numeric(dimnames(sim@n)[[1]][dim(sim@n)[1]])
y_ticks = 6
print_it = TRUE
ylim = c(NA, NA)
total = FALSE
background = TRUE
b <- getBiomass(sim, ...)
b <- getBiomass(sim)
if (start_time >= end_time) {
stop("start_time must be less than end_time")
}
b <- b[(as.numeric(dimnames(b)[[1]]) >= start_time) &
(as.numeric(dimnames(b)[[1]]) <= end_time), , drop = FALSE]
b_total <- rowSums(b)
if (total) {
b <- cbind(b, Total = b_total)
species <- c("Total", species)
}
names(dimnames(b)) <- c("time", "Species")
bm <- reshape2::melt(b)
bm$Species <- as.factor(bm$Species)
min_value <- 1e-20
bm <- bm[bm$value >= min_value &
(is.na(ylim[1]) | bm$value >= ylim[1]) &
(is.na(ylim[2]) | bm$value <= ylim[1]), ]
spec_bm <- bm[bm$Species %in% species, ]
x_label <- "Year"
y_label <- "Biomass [g]"
p <- ggplot(spec_bm, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", breaks = log_breaks(n = y_ticks),
labels = prettyNum, name = y_label) +
scale_x_continuous(name = x_label) +
scale_colour_manual(values = sim@params@linecolour) +
scale_linetype_manual(values = sim@params@linetype)
if (background) {
# Add background species in light grey
back_sp <- dimnames(sim@n)$sp[is.na(sim@params@A)]
back_bm <- bm[bm$Species %in% back_sp, ]
p <- p + geom_line(aes(group = Species), data = back_bm,
colour = "lightgrey")
}
p <- p +
geom_line(aes(colour = Species, linetype = Species))
p
temp_sim = sim_scenario[[1]] # to fix....
plotBiomass(temp_sim)$plot
plotBiomass(temp_sim)$plot+
facet_wrap(~Species)
BioData<-plotBiomass(temp_sim)$BioData
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet and time
BioData
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10")
p
prettyNum
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", name = y_label)
p
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", name = y_label) +
scale_x_continuous(name = x_label) +
geom_line()
p
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", name = y_label) +
scale_x_continuous(name = x_label) +
geom_line() +
facet_wrap(~Species)
p
BioData$Species
BioData<-BioData %>%
left_join(df_param[,c(1,2)])
BioData
temp_sim = sim_scenario[[1]] # to fix....
BioData<-plotBiomass(temp_sim)$BioData
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet and time
BioData<-BioData %>%
mutate(Species = "species")
BioData<-plotBiomass(temp_sim)$BioData
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet and time
BioData<-BioData %>%
mutate(Species = "species") %>%
left_join(df_param[,c(1,2)])
temp_sim = sim_scenario[[1]] # to fix....
plotBiomass(temp_sim)$plot
BioData<-plotBiomass(temp_sim)$BioData
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet and time
BioData<-BioData %>%
mutate(Species = "species") %>%
left_join(df_param[,c(1,2)])
df_param[,c(1,2)]
BioData<-plotBiomass(temp_sim)$BioData
BioData<-plotBiomass(temp_sim)$BioData
BioData<-BioData %>%
mutate(Species = "species")
head(BioData)
BioData<-plotBiomass(temp_sim)$BioData
BioData<-BioData %>%
mutate(Species == "species") %>%
left_join(df_param[,c(1,2)])
head(BioData)
BioData<-plotBiomass(temp_sim)$BioData
colnames(BioData)<-c("time","species","value")
BioData<-BioData %>%
left_join(df_param[,c(1,2)])
head(BioData)
x_label <- "Year"
y_label <- "Biomass [g]"
BioLim
BioLim<-BioLim %>%
left_join(df_param[,c(1,2)])
BioLim
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", name = y_label) +
scale_x_continuous(name = x_label) +
geom_line() +
geom_hline(data = BioLim, aes(yintercept = bio20), linetype = "dotdash", color = "red")+
geom_hline(data = BioLim, aes(yintercept = bio40), linetype = "dashed", color = "green")+
geom_hline(data = BioLim, aes(yintercept = bio48), linetype = "dotted", color = "blue")+
theme_bw()+
theme(text = element_text(size=18),
axis.title.y = element_text(vjust=0.4, size = 16),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_wrap(~spCommon)
p
temp_sim = sim_scenario[[1]]
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet, time and scenarios
BioLim<-BioLim %>%
left_join(df_param[,c(1,2)])
BioData<-plotBiomass(temp_sim)$BioData
colnames(BioData)<-c("time","species","value")
BioData<-BioData %>%
left_join(df_param[,c(1,2)])
x_label <- "Year"
y_label <- "Biomass [g]"
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", name = y_label) +
scale_x_continuous(name = x_label) +
geom_line() +
geom_hline(data = BioLim, aes(yintercept = bio20), linetype = "dotdash", color = "red")+
geom_hline(data = BioLim, aes(yintercept = bio40), linetype = "dashed", color = "green")+
geom_hline(data = BioLim, aes(yintercept = bio48), linetype = "dotted", color = "blue")+
theme_bw()+
theme(text = element_text(size=18),
axis.title.y = element_text(vjust=0.4, size = 16),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_wrap(~spCommon)
unique(BioData$species)
unique(BioData$spCommon)
temp_sim = sim_scenario[[1]]
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet, time and scenarios
BioLim<-BioLim %>%
left_join(df_param[,c(1,2)])
BioData<-plotBiomass(temp_sim)$BioData
colnames(BioData)<-c("time","species","value")
BioData<-BioData %>%
left_join(df_param[,c(1,2)])
a = unique(BioData$spCommon)
BioData<-BioData %>%
mutate(spCommon = factor(spCommon, level = a))
BioLim<-BioLim %>%
mutate(spCommon = factor(spCommon, level = a))
x_label <- "Year"
y_label <- "Biomass [g]"
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", name = y_label) +
scale_x_continuous(name = x_label) +
geom_line() +
geom_hline(data = BioLim, aes(yintercept = bio20), linetype = "dotdash", color = "red")+
geom_hline(data = BioLim, aes(yintercept = bio40), linetype = "dashed", color = "green")+
geom_hline(data = BioLim, aes(yintercept = bio48), linetype = "dotted", color = "blue")+
theme_bw()+
theme(text = element_text(size=18),
axis.title.y = element_text(vjust=0.4, size = 16),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_wrap(~spCommon)
p
plot_limits<-function(temp_sim){
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet, time and scenarios
BioLim<-BioLim %>%
left_join(df_param[,c(1,2)])
BioData<-plotBiomass(temp_sim)$BioData
colnames(BioData)<-c("time","species","value")
BioData<-BioData %>%
left_join(df_param[,c(1,2)])
# order factors
a = unique(BioData$spCommon)
BioData<-BioData %>%
mutate(spCommon = factor(spCommon, level = a))
BioLim<-BioLim %>%
mutate(spCommon = factor(spCommon, level = a))
x_label <- "Year"
y_label <- "Biomass [g]"
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", name = y_label) +
scale_x_continuous(name = x_label) +
geom_line() +
geom_hline(data = BioLim, aes(yintercept = bio20), linetype = "dotdash", color = "red")+
geom_hline(data = BioLim, aes(yintercept = bio40), linetype = "dashed", color = "green")+
geom_hline(data = BioLim, aes(yintercept = bio48), linetype = "dotted", color = "blue")+
theme_bw()+
theme(text = element_text(size=18),
axis.title.y = element_text(vjust=0.4, size = 16),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_wrap(~spCommon)
return(p)
}
temp_sim = sim_scenario[[1]]
eData<-plotEffort_CN(temp_sim)$eData
colnames(eData)<-c("time","fleet","Effort [m]")
yData<-plotYield_CN(temp_sim)$yData
colnames(yData)<-c("time","fleet","Yield [g]")
prData<-plotProfit_CN(temp_sim)$prData
colnames(prData)<-c("time","fleet","Profit [$]")
fleetData<-merge(eData, yData, all = TRUE)
fleetData<-merge(fleetData, prData, all = TRUE)
fleetData<-fleetData %>%
gather(key, value, -time, -fleet)
x_label <- "Year"
p <- ggplot(fleetData, aes(x = time, y = value)) +
scale_x_continuous(name = x_label) +
geom_line() +
theme_bw()+
theme(text = element_text(size=18),
axis.title.y = element_blank(),
axis.title.x = element_text(vjust=0.3, size = 16),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_grid(key~fleet, scale = "free")
p
plot_fleet<-function(temp_sim){
eData<-plotEffort_CN(temp_sim)$eData
colnames(eData)<-c("time","fleet","Effort [m]")
yData<-plotYield_CN(temp_sim)$yData
colnames(yData)<-c("time","fleet","Yield [g]")
prData<-plotProfit_CN(temp_sim)$prData
colnames(prData)<-c("time","fleet","Profit [$]")
fleetData<-merge(eData, yData, all = TRUE)
fleetData<-merge(fleetData, prData, all = TRUE)
fleetData<-fleetData %>%
gather(key, value, -time, -fleet)
x_label <- "Year"
p <- ggplot(fleetData, aes(x = time, y = value)) +
scale_x_continuous(name = x_label) +
geom_line() +
theme_bw()+
theme(text = element_text(size=18),
axis.title.y = element_blank(),
axis.title.x = element_text(vjust=0.3, size = 16),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_grid(key~fleet, scale = "free")
return(p)
}
plot_SI_sim_scenario<-list()
for(i in 1:length(sim_scenario)){
# i = 1
a<-plot_limits(sim_scenario[[i]])
b<-plot_fleet(sim_scenario[[i]])
# library(patchwork)
plot_SI_sim_scenario [[i]]<- a / b + plot_layout (nrow = 2, heights = c(1.5,1))
names(plot_SI_sim_scenario)[i]<-names(sim_scenario)[i]
}
for(i in 1:length(plot_SI_sim_scenario)){
# i = 6
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD?final")
tiff(paste("FigS6_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
}
for(i in 1:length(plot_SI_sim_scenario)){
# i = 6
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS6_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
}
plot_SI_sim_scenario[[1]]
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS6_",names(plot_SI_sim_scenario)[1],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[1]]
dev.off()
i = 1
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
i = 2
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
i = 3
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
plot_limits<-function(temp_sim){
BioLim<-temp_sim@BioLimits[[4]]$SED # limits don't change across fleet, time and scenarios
BioLim<-BioLim %>%
left_join(df_param[,c(1,2)])
BioData<-plotBiomass(temp_sim)$BioData
colnames(BioData)<-c("time","species","value")
BioData<-BioData %>%
left_join(df_param[,c(1,2)])
# order factors
a = unique(BioData$spCommon)
BioData<-BioData %>%
mutate(spCommon = factor(spCommon, level = a))
BioLim<-BioLim %>%
mutate(spCommon = factor(spCommon, level = a))
x_label <- "Year"
y_label <- "Biomass [g]"
p <- ggplot(BioData, aes(x = time, y = value)) +
scale_y_continuous(trans = "log10", name = y_label) +
scale_x_continuous(name = x_label) +
geom_line() +
geom_hline(data = BioLim, aes(yintercept = bio20), linetype = "dotdash", color = "red")+
geom_hline(data = BioLim, aes(yintercept = bio40), linetype = "dashed", color = "green")+
geom_hline(data = BioLim, aes(yintercept = bio48), linetype = "dotted", color = "blue")+
theme_bw()+
theme(text = element_text(size=18),
axis.title.y = element_text(vjust=0.4, size = 16),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_wrap(~spCommon)
return(p)
}
plot_fleet<-function(temp_sim){
eData<-plotEffort_CN(temp_sim)$eData
colnames(eData)<-c("time","fleet","Effort [m]")
yData<-plotYield_CN(temp_sim)$yData
colnames(yData)<-c("time","fleet","Yield [g]")
prData<-plotProfit_CN(temp_sim)$prData
colnames(prData)<-c("time","fleet","Profit [$]")
fleetData<-merge(eData, yData, all = TRUE)
fleetData<-merge(fleetData, prData, all = TRUE)
fleetData<-fleetData %>%
gather(key, value, -time, -fleet)
x_label <- "Year"
p <- ggplot(fleetData, aes(x = time, y = value)) +
scale_x_continuous(name = x_label) +
geom_line() +
theme_bw()+
theme(text = element_text(size=18),
axis.title.y = element_blank(),
axis.title.x = element_text(vjust=0.3, size = 16),
axis.text.x = element_text(angle=90, hjust=0.5),
panel.grid.major = element_blank(),
strip.background =element_rect(fill="white"),
legend.position = "none")+
facet_grid(key~fleet, scale = "free")
return(p)
}
plot_SI_sim_scenario<-list()
for(i in 1:length(sim_scenario)){
# i = 1
a<-plot_limits(sim_scenario[[i]])
b<-plot_fleet(sim_scenario[[i]])
# library(patchwork)
plot_SI_sim_scenario [[i]]<- a / b + plot_layout (nrow = 2, heights = c(1.5,1))
names(plot_SI_sim_scenario)[i]<-names(sim_scenario)[i]
}
i = 1
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
i = 2
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
i = 3
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
i = 4
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
i = 5
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
i = 6
setwd("/Users/nov017/Dropbox/Mizer-fleet_extension/plot/FD/Final")
tiff(paste("FigS3_",names(plot_SI_sim_scenario)[i],".tiff", sep = "" ), height=10, width=10, units ='in', res=300)
plot_SI_sim_scenario[[i]]
dev.off()
